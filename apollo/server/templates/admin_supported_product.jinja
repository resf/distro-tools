{% extends "admin_layout.jinja" %}

{% block admin_content %}
<div class="bx--container">
  <div class="bx--grid">
    <div class="bx--row">
      <div class="bx--col">
        <nav aria-label="breadcrumb" class="bx--breadcrumb">
          <div class="bx--breadcrumb-item">
            <a href="/admin/supported-products/" class="bx--link">Supported Products</a>
          </div>
          <div class="bx--breadcrumb-item bx--breadcrumb-item--current">
            <span>{{ product.name }}</span>
          </div>
        </nav>
        
        <h1 class="bx--type-expressive-heading-05">{{ product.name }}</h1>
        
        <div class="bx--tile" style="margin-bottom: 2rem;">
          <div class="bx--row">
            <div class="bx--col-lg-6">
              <p><strong>Variant:</strong> {{ product.variant }}</p>
              <p><strong>Vendor:</strong> {{ product.vendor }}</p>
              {% if product.code %}
              <p><strong>Code:</strong> {{ product.code.code }}</p>
              {% endif %}
            </div>
            <div class="bx--col-lg-6">
              <p><strong>Created:</strong> {{ product.created_at.strftime('%Y-%m-%d %H:%M:%S') }}</p>
              {% if product.updated_at %}
              <p><strong>Updated:</strong> {{ product.updated_at.strftime('%Y-%m-%d %H:%M:%S') }}</p>
              {% endif %}
              {% if product.eol_at %}
              <p><strong>End of Life:</strong> {{ product.eol_at.strftime('%Y-%m-%d') }}</p>
              {% endif %}
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="bx--row">
      <div class="bx--col">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
          <h2 class="bx--type-productive-heading-04">Red Hat Mirrors ({{ product.rh_mirrors|length }})</h2>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            {% if product.rh_mirrors %}
            <form id="bulkDeleteForm" method="post" action="/admin/supported-products/{{ product.id }}/bulk-delete-mirrors" style="display: flex; gap: 0.5rem; align-items: center;">
              <input type="hidden" name="mirror_ids" id="mirror_ids" value="">
              <button type="button" id="selectAllBtn" class="bx--btn bx--btn--ghost bx--btn--sm">Select All</button>
              <button type="button" id="selectNoneBtn" class="bx--btn bx--btn--ghost bx--btn--sm">Select None</button>
              <button type="submit" id="bulkDeleteBtn" class="bx--btn bx--btn--danger bx--btn--sm" disabled>
                Delete Selected
              </button>
            </form>
            {% endif %}
            <a href="/admin/supported-products/{{ product.id }}/mirrors/new" class="bx--btn bx--btn--primary">
              Add Mirror
            </a>
          </div>
        </div>

        {% if product.rh_mirrors %}
        <div style="max-height: 500px; overflow-y: auto;">
        <table class="bx--data-table bx--data-table--sticky-header">
          <thead style="position: sticky; top: 0; background: #f4f4f4; z-index: 1;">
            <tr>
              <th style="width: 30px; min-width: 30px; max-width: 30px; padding: 0.5rem 0.25rem;">
                <span class="bx--table-header-label" style="font-size: 0.75rem;">‚òê</span>
              </th>
              <th>
                <span class="bx--table-header-label">Name</span>
              </th>
              <th>
                <span class="bx--table-header-label">Match Variant</span>
              </th>
              <th>
                <span class="bx--table-header-label">Version</span>
              </th>
              <th>
                <span class="bx--table-header-label">Architecture</span>
              </th>
              <th>
                <span class="bx--table-header-label">Repositories</span>
              </th>
              <th>
                <span class="bx--table-header-label">Blocks</span>
              </th>
              <th>
                <span class="bx--table-header-label">Actions</span>
              </th>
            </tr>
          </thead>
          <tbody>
            {% for mirror in product.rh_mirrors %}
            <tr>
              <td style="width: 30px; min-width: 30px; max-width: 30px; padding: 0.5rem 0.25rem; text-align: center;">
                <input type="checkbox" 
                       class="bx--checkbox mirror-checkbox" 
                       id="mirror_{{ mirror.id }}" 
                       data-mirror-id="{{ mirror.id }}" 
                       data-mirror-name="{{ mirror.name }}"
                       style="margin: 0;">
                <label for="mirror_{{ mirror.id }}" class="bx--checkbox-label" style="margin: 0;"></label>
              </td>
              <td>
                <a href="/admin/supported-products/{{ product.id }}/mirrors/{{ mirror.id }}" class="bx--link">
                  {{ mirror.name }}
                </a>
              </td>
              <td>{{ mirror.match_variant }}</td>
              <td>
                {{ mirror.match_major_version }}{% if mirror.match_minor_version %}.{{ mirror.match_minor_version }}{% endif %}
              </td>
              <td>{{ mirror.match_arch }}</td>
              <td>
                <span class="bx--tag bx--tag--blue">
                  {{ mirror.stats.repomds }} repos
                </span>
              </td>
              <td>
                <span class="bx--tag bx--tag--red">
                  {{ mirror.stats.blocks }} blocks
                </span>
              </td>
              <td>
                <div style="display: flex; gap: 0.5rem;">
                  <a href="/admin/supported-products/{{ product.id }}/mirrors/{{ mirror.id }}" 
                     class="bx--btn bx--btn--ghost bx--btn--sm">
                    Manage
                  </a>
                  <form method="post" action="/admin/supported-products/{{ product.id }}/mirrors/{{ mirror.id }}/delete" 
                        style="display: inline;" 
                        onsubmit="return confirm('Are you sure you want to delete this mirror? This will also delete all associated repositories and blocks.')">
                    <button type="submit" class="bx--btn bx--btn--danger--ghost bx--btn--sm">
                      Delete
                    </button>
                  </form>
                </div>
              </td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
        </div>
        {% else %}
        <div class="bx--tile">
          <p>No Red Hat mirrors configured for this product.</p>
          <a href="/admin/supported-products/{{ product.id }}/mirrors/new" class="bx--btn bx--btn--primary" style="margin-top: 1rem;">
            Add First Mirror
          </a>
        </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const checkboxes = document.querySelectorAll('.mirror-checkbox');
  const selectAllBtn = document.getElementById('selectAllBtn');
  const selectNoneBtn = document.getElementById('selectNoneBtn');
  const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
  const bulkDeleteForm = document.getElementById('bulkDeleteForm');
  const mirrorIdsInput = document.getElementById('mirror_ids');

  function updateBulkDeleteButton() {
    const selectedCheckboxes = document.querySelectorAll('.mirror-checkbox:checked');
    const selectedCount = selectedCheckboxes.length;
    
    if (selectedCount > 0) {
      bulkDeleteBtn.disabled = false;
      bulkDeleteBtn.textContent = `Delete Selected (${selectedCount})`;
      
      // Update hidden input with selected mirror IDs
      const selectedIds = Array.from(selectedCheckboxes).map(cb => cb.dataset.mirrorId);
      mirrorIdsInput.value = selectedIds.join(',');
    } else {
      bulkDeleteBtn.disabled = true;
      bulkDeleteBtn.textContent = 'Delete Selected';
      mirrorIdsInput.value = '';
    }
  }

  // Add event listeners to checkboxes
  checkboxes.forEach(checkbox => {
    checkbox.addEventListener('change', updateBulkDeleteButton);
  });

  // Select All button
  if (selectAllBtn) {
    selectAllBtn.addEventListener('click', function() {
      checkboxes.forEach(checkbox => {
        checkbox.checked = true;
      });
      updateBulkDeleteButton();
    });
  }

  // Select None button
  if (selectNoneBtn) {
    selectNoneBtn.addEventListener('click', function() {
      checkboxes.forEach(checkbox => {
        checkbox.checked = false;
      });
      updateBulkDeleteButton();
    });
  }

  // Bulk delete form submission
  if (bulkDeleteForm) {
    bulkDeleteForm.addEventListener('submit', function(e) {
      const selectedCheckboxes = document.querySelectorAll('.mirror-checkbox:checked');
      if (selectedCheckboxes.length === 0) {
        e.preventDefault();
        alert('Please select at least one mirror to delete.');
        return false;
      }

      const selectedNames = Array.from(selectedCheckboxes).map(cb => cb.dataset.mirrorName);
      const confirmMessage = `Are you sure you want to delete ${selectedCheckboxes.length} mirror(s)?\n\nSelected mirrors:\n${selectedNames.join('\n')}\n\nThis action cannot be undone.`;
      
      if (!confirm(confirmMessage)) {
        e.preventDefault();
        return false;
      }
    });
  }

  // Initial update
  updateBulkDeleteButton();
});
</script>
{% endblock %}