{% extends "admin_layout.jinja" %}

{% block admin_content %}
<div class="bx--grid">
    <div class="bx--row">
        <div class="bx--col">
            <h1 class="bx--type-expressive-heading-05">Workflow Management</h1>
            <p class="bx--type-body-long-02">Manually trigger workflows for development and testing purposes.</p>

        <!-- Status Messages -->
        {% if request.session.get('workflow_message') %}
            {% set message_type = request.session.get('workflow_type', 'info') %}
            <div class="bx--row">
                <div class="bx--col">
                    <div class="bx--inline-notification bx--inline-notification--{{ message_type }}" role="alert">
                        <div class="bx--inline-notification__details">
                            <div class="bx--inline-notification__text-wrapper">
                                <div class="bx--inline-notification__title">
                                    {% if message_type == 'success' %}Success{% elif message_type == 'error' %}Error{% else %}Info{% endif %}
                                </div>
                                <div class="bx--inline-notification__subtitle">{{ request.session.pop('workflow_message') }}</div>
                                {% set _ = request.session.pop('workflow_type', None) %}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}

        <!-- RH Matcher Workflow Section -->
        <div class="bx--row">
            <div class="bx--col">
                <div class="bx--tile">
                    <h2 class="bx--type-productive-heading-03">RH Matcher Workflow</h2>
                    <p class="bx--type-body-long-01">Matches Red Hat advisories to Rocky Linux packages. Optionally filter by Rocky Linux major versions.</p>

            <form action="/admin/workflows/rh-matcher/trigger" method="post" class="bx--form">
                <fieldset class="bx--fieldset">
                    <legend class="bx--label">Major Version Filter (optional):</legend>

                    <div class="bx--form-item bx--checkbox-wrapper">
                        <input id="major_8" class="bx--checkbox" type="checkbox" name="major_versions" value="8">
                        <label for="major_8" class="bx--checkbox-label">Rocky Linux 8</label>
                    </div>
                    <div class="bx--form-item bx--checkbox-wrapper">
                        <input id="major_9" class="bx--checkbox" type="checkbox" name="major_versions" value="9">
                        <label for="major_9" class="bx--checkbox-label">Rocky Linux 9</label>
                    </div>
                    <div class="bx--form-item bx--checkbox-wrapper">
                        <input id="major_10" class="bx--checkbox" type="checkbox" name="major_versions" value="10">
                        <label for="major_10" class="bx--checkbox-label">Rocky Linux 10</label>
                    </div>

                    <div class="bx--form__helper-text">
                        Note: If no versions are selected, all available versions will be processed.
                    </div>
                </fieldset>

                <button type="submit" class="bx--btn bx--btn--primary">
                    Trigger RH Matcher Workflow
                </button>
            </form>
                </div>
            </div>
        </div>

        <!-- Poll RHCSAF Workflow Section -->
        <div class="bx--row" style="margin-top: 2rem;">
            <div class="bx--col">
                <div class="bx--tile">
                    <h2 class="bx--type-productive-heading-03">Poll RH CSAF Advisories Workflow</h2>
                    <p class="bx--type-body-long-01">Polls Red Hat for new CSAF (Common Security Advisory Framework) advisories.</p>

                    <form action="/admin/workflows/poll-rhcsaf/trigger" method="post" class="bx--form">
                        <button type="submit" class="bx--btn bx--btn--secondary">
                            Trigger Poll RHCSAF Workflow
                        </button>
                    </form>
                </div>
            </div>
        </div>

        {% if reset_allowed %}
        <!-- Database Operations Section (Development Only) -->
        <div class="bx--row" style="margin-top: 2rem;">
            <div class="bx--col">
                <div class="bx--tile">
                    <h2 class="bx--type-productive-heading-03">⚠️ Database Operations ({{ env_name|title }} Only)</h2>

                    <div class="bx--inline-notification bx--inline-notification--warning" role="alert" style="margin: 1rem 0;">
                        <div class="bx--inline-notification__details">
                            <div class="bx--inline-notification__text-wrapper">
                                <div class="bx--inline-notification__title">Environment Notice</div>
                                <div class="bx--inline-notification__subtitle">
                                    This feature is only available in non-production environments. Current environment: <code>{{ env_name }}</code>
                                </div>
                            </div>
                        </div>
                    </div>

            <p>Perform partial database reset by deleting Red Hat advisories created after a specified date.
               This will also delete all related records (packages, CVEs, bugzilla bugs, etc.) through CASCADE constraints.</p>

            <form id="reset-form" action="/admin/workflows/database/partial-reset" method="post" class="bx--form">
                <div class="bx--form-item">
                    <label for="cutoff_date" class="bx--label">
                        Cutoff Date (delete advisories created after this date):
                    </label>
                    <div style="display: flex; align-items: center; gap: 1rem;">
                        <input type="date" id="cutoff_date" name="cutoff_date" required class="bx--text-input" style="width: auto; max-width: 200px;">
                        <button type="button" id="preview-btn" class="bx--btn bx--btn--tertiary bx--btn--sm">
                            Preview Impact
                        </button>
                    </div>
                </div>

                <div id="preview-results" style="display: none; margin: 1rem 0; padding: 1rem; border: 1px solid #ddd; border-radius: 4px; background-color: #f8f9fa;">
                    <!-- Preview results will be populated here -->
                </div>

                <div class="bx--inline-notification bx--inline-notification--error" role="alert" style="margin: 1rem 0;">
                    <div class="bx--inline-notification__details">
                        <div class="bx--inline-notification__text-wrapper">
                            <div class="bx--inline-notification__title">⚠️ Danger Zone</div>
                            <div class="bx--inline-notification__subtitle">
                                <strong>WARNING:</strong> This operation will permanently delete data and cannot be undone. Use only in development/testing environments.
                            </div>
                        </div>
                    </div>
                </div>

                <div class="bx--form-item bx--checkbox-wrapper">
                    <input id="confirm" class="bx--checkbox" type="checkbox" name="confirm" value="true" required>
                    <label for="confirm" class="bx--checkbox-label">I understand this will permanently delete Red Hat advisories and all related data</label>
                </div>

                <button type="submit" id="reset-btn" class="bx--btn bx--btn--danger" disabled>
                    Perform Partial Database Reset
                </button>
            </form>
                </div>
            </div>
        </div>
        {% endif %}

        <!-- Information Section -->
        <div class="bx--row" style="margin-top: 2rem;">
            <div class="bx--col">
                <div class="bx--inline-notification bx--inline-notification--info" role="alert">
                    <div class="bx--inline-notification__details">
                        <div class="bx--inline-notification__text-wrapper">
                            <div class="bx--inline-notification__title">ℹ️ Workflow Information</div>
                            <div class="bx--inline-notification__subtitle">
                                <ul>
                                    <li><strong>RH Matcher Workflow:</strong> Runs on the <code>v2-rpmworker</code> task queue</li>
                                    <li><strong>Poll RHCSAF Workflow:</strong> Runs on the <code>v2-rhworker</code> task queue</li>
                                    <li><strong>Status Monitoring:</strong> Check workflow status via Temporal CLI or API endpoints</li>
                                    <li><strong>Development Use:</strong> These manual triggers are intended for development and testing</li>
                                    {% if reset_allowed %}
                                    <li><strong>Database Reset:</strong> Available in {{ env_name }} environment for development purposes</li>
                                    {% endif %}
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


{% if reset_allowed %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const confirmCheckbox = document.getElementById('confirm');
    const resetBtn = document.getElementById('reset-btn');
    const previewBtn = document.getElementById('preview-btn');
    const cutoffDateInput = document.getElementById('cutoff_date');
    const previewResults = document.getElementById('preview-results');

    // Enable/disable reset button based on confirmation checkbox
    if (confirmCheckbox && resetBtn) {
        confirmCheckbox.addEventListener('change', function() {
            resetBtn.disabled = !this.checked;
        });
    }

    // Preview functionality
    if (previewBtn && cutoffDateInput) {
        previewBtn.addEventListener('click', async function() {
            const cutoffDate = cutoffDateInput.value;
            if (!cutoffDate) {
                alert('Please select a cutoff date first');
                return;
            }

            previewBtn.disabled = true;
            previewBtn.textContent = 'Loading...';

            try {
                const response = await fetch(`/admin/workflows/database/preview-reset?cutoff_date=${cutoffDate}`);
                const data = await response.json();

                if (response.ok) {
                    previewResults.innerHTML = `
                        <h4>Preview Results:</h4>
                        <ul>
                            <li><strong>Cutoff Date:</strong> ${data.cutoff_date}</li>
                            <li><strong>Red Hat Advisories to Delete:</strong> ${data.red_hat_advisories_count}</li>
                            <li><strong>Note:</strong> ${data.note}</li>
                        </ul>
                        ${data.red_hat_advisories_count > 0 ?
                          '<p style="color: #dc3545;"><strong>Warning:</strong> This will permanently delete the above records!</p>' :
                          '<p style="color: #28a745;">No advisories will be deleted with this date.</p>'}
                    `;
                    previewResults.style.display = 'block';
                } else {
                    previewResults.innerHTML = `
                        <h4>Preview Error:</h4>
                        <p style="color: #dc3545;">${data.detail || 'Failed to preview reset'}</p>
                    `;
                    previewResults.style.display = 'block';
                }
            } catch (error) {
                previewResults.innerHTML = `
                    <h4>Preview Error:</h4>
                    <p style="color: #dc3545;">Failed to connect to server: ${error.message}</p>
                `;
                previewResults.style.display = 'block';
            } finally {
                previewBtn.disabled = false;
                previewBtn.textContent = 'Preview Impact';
            }
        });
    }

    // Hide preview results when date changes
    if (cutoffDateInput) {
        cutoffDateInput.addEventListener('change', function() {
            previewResults.style.display = 'none';
        });
    }
});
</script>
{% endif %}
{% endblock %}